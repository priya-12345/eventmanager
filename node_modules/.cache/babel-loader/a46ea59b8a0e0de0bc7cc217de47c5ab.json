{"ast":null,"code":"import { GET_EVENTS, DELETE_EVENT, ADD_EVENT, GET_EVENT, UPDATE_EVENT } from '../actions/types';\nconst initialState = {\n  events: [],\n  event: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_EVENTS:\n      return { ...state,\n        events: action.payload\n      };\n\n    case GET_EVENT:\n      return { ...state,\n        event: action.payload\n      };\n\n    case DELETE_EVENT:\n      return { ...state,\n        events: state.events.filter(event => event.id !== action.payload)\n      };\n\n    case ADD_EVENT:\n      return { ...state,\n        events: [action.payload, ...state.events]\n      };\n\n    case UPDATE_EVENT:\n      return { ...state,\n        events: state.events.map(event => event.id === action.payload.id ? event = action.payload : event)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Projects/eventfinder/src/reducers/eventReducer.js"],"names":["GET_EVENTS","DELETE_EVENT","ADD_EVENT","GET_EVENT","UPDATE_EVENT","initialState","events","event","state","action","type","payload","filter","id","map"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,YAAnB,EAAgCC,SAAhC,EAA0CC,SAA1C,EAAoDC,YAApD,QAAuE,kBAAvE;AAGA,MAAMC,YAAY,GAAC;AACfC,EAAAA,MAAM,EAAC,EADQ;AAEfC,EAAAA,KAAK,EAAC;AAFS,CAAnB;AAKA,eAAe,UAASC,KAAK,GAACH,YAAf,EAA4BI,MAA5B,EACf;AACI,UAAOA,MAAM,CAACC,IAAd;AACJ,SAAKV,UAAL;AACA,aAAO,EACH,GAAGQ,KADA;AAEHF,QAAAA,MAAM,EAACG,MAAM,CAACE;AAFX,OAAP;;AAIA,SAAKR,SAAL;AACA,aAAO,EACH,GAAGK,KADA;AAEHD,QAAAA,KAAK,EAACE,MAAM,CAACE;AAFV,OAAP;;AAIA,SAAKV,YAAL;AACA,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,MAAM,EAACE,KAAK,CAACF,MAAN,CAAaM,MAAb,CACHL,KAAK,IAAEA,KAAK,CAACM,EAAN,KAAWJ,MAAM,CAACE,OADtB;AAFJ,OAAP;;AAMA,SAAKT,SAAL;AACI,aAAM,EACV,GAAGM,KADO;AACDF,QAAAA,MAAM,EAAC,CAACG,MAAM,CAACE,OAAR,EAAgB,GAAGH,KAAK,CAACF,MAAzB;AADN,OAAN;;AAGA,SAAKF,YAAL;AACA,aAAM,EACV,GAAGI,KADO;AAEVF,QAAAA,MAAM,EAACE,KAAK,CAACF,MAAN,CAAaQ,GAAb,CAAiBP,KAAK,IAAGA,KAAK,CAACM,EAAN,KAC5BJ,MAAM,CAACE,OAAP,CAAeE,EADa,GACPN,KAAK,GAACE,MAAM,CAACE,OADN,GAE5BJ,KAFG;AAFG,OAAN;;AAMI;AACI,aAAOC,KAAP;AA9BR;AAgCH","sourcesContent":["import {GET_EVENTS,DELETE_EVENT,ADD_EVENT,GET_EVENT,UPDATE_EVENT} from '../actions/types';\r\n\r\n\r\nconst initialState={\r\n    events:[],\r\n    event:{}\r\n};\r\n\r\nexport default function(state=initialState,action)\r\n{\r\n    switch(action.type){\r\ncase GET_EVENTS:\r\nreturn {\r\n    ...state,\r\n    events:action.payload\r\n};\r\ncase GET_EVENT:\r\nreturn {\r\n    ...state,\r\n    event:action.payload\r\n};\r\ncase DELETE_EVENT:\r\nreturn {\r\n    ...state,\r\n    events:state.events.filter(\r\n        event=>event.id!==action.payload\r\n    )\r\n};\r\ncase ADD_EVENT:\r\n    return{\r\n...state,events:[action.payload,...state.events]\r\n    };\r\n    case UPDATE_EVENT:\r\n    return{\r\n...state,\r\nevents:state.events.map(event=> event.id===\r\n    action.payload.id ? (event=action.payload):\r\n    event)\r\n    };\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
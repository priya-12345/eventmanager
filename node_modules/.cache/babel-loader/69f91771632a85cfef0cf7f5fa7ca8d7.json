{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\eventfinder\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_EVENT':\n      return { ...state,\n        events: state.events.filter(event => event.id !== action.payload)\n      };\n\n    case 'ADD_EVENT':\n      return { ...state,\n        events: [action.payload, ...state.events]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [\n        /* {\r\n        id:1,\r\n        name:'Slate & Crystal Events',\r\n        description:'abc',\r\n        location:'Switzerland'\r\n           },\r\n        {\r\n         id:2,\r\n         name :'Indigo Event Planning',\r\n         description:'xyz',\r\n         location:'kalyan'\r\n         \r\n         },\r\n         {\r\n             id:3,\r\n             name:'Buttercup Events',\r\n             description:'pqr',\r\n             location:'Paris'\r\n             \r\n             }*/\n      ],\n      dispatch: action => this.setState(state => reducer(state, action))\n    };\n  }\n\n  async componentDidMount() {\n    const res = await axios.get('https://my-json-server.typicode.com/priya-12345/EventData/events');\n    this.setState({\n      events: res.data\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Context.Provider, {\n      value: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, this.props.children);\n  }\n\n}\nexport const Consumer = Context.Consumer;","map":{"version":3,"sources":["C:/Projects/eventfinder/src/context.js"],"names":["React","Component","axios","Context","createContext","reducer","state","action","type","events","filter","event","id","payload","Provider","dispatch","setState","componentDidMount","res","get","data","render","props","children","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAACH,KAAK,CAACI,aAAN,EAAd;;AACA,MAAMC,OAAO,GAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC1B,UAAOA,MAAM,CAACC,IAAd;AACJ,SAAK,cAAL;AACI,aAAM,EACF,GAAGF,KADD;AAEFG,QAAAA,MAAM,EAACH,KAAK,CAACG,MAAN,CAAaC,MAAb,CAAoBC,KAAK,IAC5BA,KAAK,CAACC,EAAN,KAAWL,MAAM,CAACM,OADf;AAFL,OAAN;;AAKA,SAAK,WAAL;AACA,aAAM,EACF,GAAGP,KADD;AAEFG,QAAAA,MAAM,EAAC,CAACF,MAAM,CAACM,OAAR,EAAgB,GAAGP,KAAK,CAACG,MAAzB;AAFL,OAAN;;AAIJ;AAAQ,aAAOH,KAAP;AAZJ;AAcH,CAfD;;AAiBA,OAAO,MAAMQ,QAAN,SAAuBb,SAAvB,CAAgC;AAAA;AAAA;AAAA,SAEvCK,KAFuC,GAEjC;AACFG,MAAAA,MAAM,EAAC;AACJ;;;;;;;;;;;;;;;;;;;;AADI,OADL;AAwBFM,MAAAA,QAAQ,EAAER,MAAM,IAAI,KAAKS,QAAL,CAAcV,KAAK,IACnCD,OAAO,CAACC,KAAD,EAAOC,MAAP,CADS;AAxBlB,KAFiC;AAAA;;AA8BvC,QAAMU,iBAAN,GACA;AACA,UAAMC,GAAG,GAAC,MAAMhB,KAAK,CAACiB,GAAN,CAAU,kEAAV,CAAhB;AACA,SAAKH,QAAL,CAAc;AAACP,MAAAA,MAAM,EAACS,GAAG,CAACE;AAAZ,KAAd;AAEC;;AACDC,EAAAA,MAAM,GACN;AACI,wBACI,oBAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE,KAAKf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKgB,KAAL,CAAWC,QADhB,CADJ;AAKH;;AA3CsC;AA8CvC,OAAO,MAAMC,QAAQ,GAACrB,OAAO,CAACqB,QAAvB","sourcesContent":["import React,{Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context=React.createContext();\r\nconst reducer=(state,action)=>{\r\n    switch(action.type){\r\ncase 'DELETE_EVENT':\r\n    return{\r\n        ...state,\r\n        events:state.events.filter(event=>\r\n            event.id!==action.payload)\r\n    };\r\n    case 'ADD_EVENT':\r\n    return{\r\n        ...state,\r\n        events:[action.payload,...state.events]\r\n    };\r\ndefault:return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component{\r\n\r\nstate={\r\n    events:[\r\n       /* {\r\n    id:1,\r\n    name:'Slate & Crystal Events',\r\n    description:'abc',\r\n    location:'Switzerland'\r\n    \r\n    },\r\n    {\r\n        id:2,\r\n        name :'Indigo Event Planning',\r\n        description:'xyz',\r\n        location:'kalyan'\r\n        \r\n        },\r\n        {\r\n            id:3,\r\n            name:'Buttercup Events',\r\n            description:'pqr',\r\n            location:'Paris'\r\n            \r\n            }*/\r\n    ],\r\n    dispatch: action => this.setState(state =>\r\n        reducer(state,action))\r\n};\r\n\r\nasync componentDidMount()\r\n{\r\nconst res=await axios.get('https://my-json-server.typicode.com/priya-12345/EventData/events');\r\nthis.setState({events:res.data});\r\n\r\n}\r\nrender()\r\n{\r\n    return(\r\n        <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n}\r\n\r\nexport const Consumer=Context.Consumer;\r\n"]},"metadata":{},"sourceType":"module"}